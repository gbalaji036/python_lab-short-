8a)

from bokeh.plotting import figure, show 
from bokeh.models import Legend, LegendItem, Title 
 
x = [1, 2, 3, 4, 5] 
y1 = [2, 5, 8, 2, 7] 
y2 = [4, 6, 2, 8, 3] 
 
p = figure(title="Bokeh Line Graph with Annotations and Legends", x_axis_label='X-axis',  
y_axis_label='Y-axis') 
line1 = p.line(x, y1, line_width=2, line_color="blue", legend_label="Line 1") 
line2 = p.line(x, y2, line_width=2, line_color="green", legend_label="Line 2") 
p.add_layout(Title(text="Annotations:", text_font_size="12pt"), 'above') 
p.add_layout(Title(text="Some important point", text_font_size="10pt", text_color="red", 
align="center"), 'below') 
 
legend = Legend(items=[ 
    LegendItem(label="Line 1", renderers=[line1]), 
 
 
    LegendItem(label="Line 2", renderers=[line2]), 
]) 
p.add_layout(legend, 'above') 
show(p)


--------------------------


8b)

from bokeh.plotting import figure, output_file, save
from bokeh.layouts import gridplot
from bokeh.io import show

# Output file
output_file("bokeh_plots.html")

# Sample data
x = [1, 2, 3, 4, 5]
y1 = [6, 7, 2, 4, 5]
y2 = [3, 5, 6, 2, 4]

# Line plot
p1 = figure(title="Line Plot")
p1.line(x, y1, legend_label="Line 1", line_width=2)

# Scatter plot
p2 = figure(title="Scatter Plot")
p2.scatter(x, y2, legend_label="Scatter Points", size=10, color="navy", alpha=0.5)

# Bar plot
p3 = figure(title="Bar Plot", x_axis_label='Categories', y_axis_label='Values')
p3.vbar(x=x, top=y1, width=0.5, legend_label="Bar", color="green")

# Creating a grid layout of the plots
grid = gridplot([[p1, p2], [p3, None]])

# Save the plot to a file
save(grid)

# Optionally show the plot in a web browser
show(grid)

